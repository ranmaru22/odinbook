mixin post(post)
  .box
    if post.author.equals(locals.currentUser)
      form(action="/posts/" + post._id, method="POST")
        input(type="hidden", name="_method", value="DELETE")
        button.delete.is-pulled-right(type="submit")
    p
      a(href=post.author.url) #[strong #{post.author.name}] 
      | #[span.is-size-7.has-text-grey.pl-1 #{post.datepostedRelative}]
    p= post.text
    p.is-size-7.has-text-grey.py-1 #{post.likes} #{post.likes === 1 ? "like" : "likes"}.
    .columns
      .column
        form(action="/posts/new", method="POST")
          input(type="hidden", name="parentpost" value=post._id)
          .field.has-addons
            .control.is-expanded
              input.input.is-small#post(name="post", rows="1", placeholder="Reply")
            .control
              button.button.is-info.is-small(type="submit") Submit
    .container.is-size-7
      p #{post.replyCount} #{post.replyCount === 1 ? "reply" : "replies"}.
      for reply in post.replies
        +reply(reply)

mixin reply(post)
  .container.mt-4
    if post.author.equals(locals.currentUser)
      form(action="/posts/" + post._id, method="POST")
        input(type="hidden", name="_method", value="DELETE")
        button.delete.is-pulled-right(type="submit")
    p 
      a(href=post.author.url) #[strong #{post.author.name}] 
      | #[span.is-size-7.has-text-grey.pl-1 #{post.datepostedRelative}]
    p= post.text